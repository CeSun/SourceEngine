//-----------------------------------------------------------------------------
//	SOURCE_DLL_WIN32_BASE.VPC
//
//	Base Settings for all Source(TM) Projects
//-----------------------------------------------------------------------------

$Include "$SRCDIR\vpc_scripts\version.vpc"

$MacroRequired				"SRCDIR"
$MacroRequired				"OUTBINNAME"	"$PROJECTNAME"
$MacroRequired				"OUTBINDIR"

$Macro BINDEFAULT	"$SRCDIR\..\game\bin\$PLATSUBDIR"
$Macro LIBPUBLIC	"$SRCDIR\lib\public\$PLATSUBDIR"
$Macro LIBCOMMON	"$SRCDIR\lib\common\$PLATSUBDIR"

$Include "$SRCDIR\vpc_scripts\loadaddress.vpc"

// Win32 scripts
$Include "$SRCDIR\vpc_scripts\win32\dll_base_debug.vpc"
$Include "$SRCDIR\vpc_scripts\win32\dll_base_release.vpc"

$Include "$SRCDIR\vpc_scripts\source_win_base.vpc"

$IgnoreRedundancyWarning	"ON"

// Common Configuration
$Configuration
{
	$General
	{
		$TargetName	"$OUTBINNAME"
	}
	
	$Compiler
	{
		$PreprocessorDefinitions			"$BASE;COMPILER_MSVC32"	
		$PreprocessorDefinitions			"$BASE;COMPILER_MSVC;_DLL_EXT=$_DLL_EXT"
		$PreprocessorDefinitions			"$BASE;DLLNAME=$OUTBINNAME"		
	}

	$Compiler [$WIN32]
	{
		$EnableEnhancedInstructionSet	"Streaming SIMD Extensions (/arch:SSE)"
	}
	
	$Linker
	{
		$AdditionalDependencies				"$BASE shell32.lib user32.lib advapi32.lib gdi32.lib comdlg32.lib ole32.lib" [$WIN32]
		$TargetMachine						"MachineX86 (/MACHINE:X86)"
		// Suppress this pointless warning using the undocumented /ignore linker switch
		// schemalib.lib(schemaclassinfo.obj) : warning LNK4221: This object file does not define any previously undefined public symbols, so it will not be used by any link operation that consumes this library
		$AdditionalOptions					"$BASE /ignore:4221"
	}

	$PreBuildEvent
	{
		$CommandLine		"if EXIST \"$OUTBINDIR\$(TargetFileName)\" for /f \"delims=\" %%A in ('attrib \"$OUTBINDIR\$(TargetFileName)\"') do set valveTmpIsReadOnly=\"%%A\"" "\n" \
							"set valveTmpIsReadOnlyLetter=%valveTmpIsReadOnly:~6,1%" "\n" \
							"if \"%valveTmpIsReadOnlyLetter%\"==\"R\" del /q \"$(TargetDir)\"$(TargetFileName)" "\n" \
							"$CRCCHECK" "\n"
		$ExcludedFromBuild	"Yes"
	}

	$PostBuildEvent
	{
		$CommandLine		"if not exist \"$OUTBINDIR\" mkdir \"$OUTBINDIR\"" "\n" 
		
		$CommandLine		"$BASE" "copy \"$(TargetDir)$(TargetFileName)\" \"$OUTBINDIR\$(TargetFileName)\"" "\n" \
							"if ERRORLEVEL 1 goto BuildEventFailed" "\n" \
							"if exist \"$(TargetDir)$(TargetName).map\" copy \"$(TargetDir)$(TargetName).map\" \"$OUTBINDIR\$(TargetName).map\"" "\n"
							
		$CommandLine		"$BASE" "copy \"$(TargetDir)$(TargetName).pdb\" \"$OUTBINDIR\$(TargetName).pdb\"" "\n" \
							"if ERRORLEVEL 1 goto BuildEventFailed" "\n" \
							"goto BuildEventOK" "\n" \
							":BuildEventFailed" "\n" \
							"echo *** ERROR! PostBuildStep FAILED for $(ProjectName)! EXE or DLL is probably running. ***" "\n" \
							"del /q \"$(TargetDir)$(TargetFileName)\"" "\n" \
							"exit 1" "\n" \
							":BuildEventOK" "\n" 

		$Description		"Publishing to $OUTBINDIR"
		$ExcludedFromBuild	"No"
	}
}

// Skeleton Project - All derived projects get this as a starting base
$Project
{
	$Folder	"Source Files"
	{
		$File	"$SRCDIR\public\tier0\memoverride.cpp"
		{
			$Configuration
			{
				$Compiler
				{
					$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
				}
			}
		}

		$File	"$SRCDIR\common\debug_dll_check.cpp"	[!$SOURCESDK]	
		{
			$Configuration
			{
				$Compiler
				{
					$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
				}
			}
		}
	}

	$Folder	"Link Libraries"
	{
		// DynamicFile allows us to build the solution without these needing to exist
		$DynamicFile	"$LIBPUBLIC\tier0.lib" 
		$DynamicFile	"$LIBPUBLIC\tier1.lib"
		$DynamicFile	"$LIBPUBLIC\vstdlib.lib"
	}
}

