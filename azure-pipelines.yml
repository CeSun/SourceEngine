# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

schedules:
  - cron: "20 03 * * *"
    displayName: "Daily Build"
    branches:
      include: ["dev"]
    always: "false" # Don't run unless changes happen


pool:
  vmImage: 'windows-2019'

steps:

# this probably won't work still, just putting it first to test quickly
- task: CmdLine@2
  displayName: Try downloading String::CRC32
  inputs:
    # workingDirectory: "$(Build.Repository.LocalPath)"
    script: |
      cpan App-cpanminus
      
      cpanm String::CRC32


#- task: PythonScript@0
#  displayName: Generate Core Projects
#  inputs:
#    scriptSource: 'filePath'
#    scriptPath: 'src/devtools/pyqpc/PyQPC.py'
#    arguments: '/basefile "../../vpc_scripts/default.vgc" +libraries /vs2019 /mksln core'
#    # change back to +core later when i try getting shaders to build here

# no difference from MSBuild@1?
#- task: VSBuild@1
#  displayName: Build the core projects
#  inputs:
#    solution: 'src\core.sln'
#    platform: 'win32'
#    configuration: 'Release'
#    maximumCpuCount: true

- task: PythonScript@0
  # displayName: Generate Engine Dependencies
  displayName: Generate Library Projects
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'src/devtools/pyqpc/PyQPC.py'
    # oof
    # arguments: '/basefile "../../vpc_scripts/default.vgc" +tier0 +tier1 +tier2 +tier3 +vstdlib +appframework +mathlib +matsys_controls +jpeglib +shaderlib +bitmap +bzip2 +choreoobjects +dmxloader +particles +vtf +vgui_controls +vgui_surfacelib /vs2019 /mksln deps'
    arguments: '/basefile "../../vpc_scripts/default.vgc" +libraries /vs2019 /mksln deps'
    
# no difference from MSBuild@1?
- task: VSBuild@1
  # displayName: Build Engine Dependencies
  displayName: Build Libraries
  inputs:
    solution: 'src\deps.sln'
    platform: 'win32'
    configuration: 'Release'
    maximumCpuCount: true

- task: PythonScript@0
  displayName: Generate Engine and Util Projects
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'src/devtools/pyqpc/PyQPC.py'
    # arguments: '/basefile "../../vpc_scripts/default.vgc" /episodic +game -libraries -stdshader_dbg -stdshader_dx9 -filesystem_steam -gameui_client /vs2019 /mksln engine'
    arguments: '/basefile "../../vpc_scripts/default.vgc" /episodic +game +utils -libraries -stdshader_dbg -stdshader_dx9 -filesystem_steam -gameui_client -bsppack -bzip2 -ep2_deathmap -vtex_dll -vtex_launcher -normal2ssbump -height2normal -height2ssbump -hammer_dll -hammer_launcher /vs2019 /mksln engine'
    
# no difference from MSBuild@1?
- task: VSBuild@1
  displayName: Build the Engine projects
  inputs:
    solution: 'src\engine.sln'
    platform: 'win32'
    configuration: 'Release'
    maximumCpuCount: true

# idk if i need to compress it
- task: ArchiveFiles@2
  displayName: Compress game folder with 7z
  inputs:
    rootFolderOrFile: 'game/'
    includeRootFolder: false
    archiveType: '7z'
    archiveFile: 'QuiverSource_$(Build.BuildId).7z'
    replaceExistingArchive: true

- task: GitHubRelease@0
  displayName: Release to github
  inputs:
    gitHubConnection: 'github test'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'manual'
    tag: '$(Build.BuildNumber)'
    title: 'Auto Build - $(Build.BuildNumber)'
    assets: 'QuiverSource_$(Build.BuildId).7z'
    isDraft: true
