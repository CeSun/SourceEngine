# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

schedules:
  - cron: "20 03 * * *"
    displayName: "Daily Build"
    branches:
      include: ["dev"]
    always: "false" # Don't run unless changes happen


pool:
  vmImage: 'windows-2019'

steps:

- task: CmdLine@2
  displayName: Generate Core Projects
  inputs:
    workingDirectory: "$(Build.Repository.LocalPath)"
    script: '
      cd src/

      devtools\bin\vpc_patched.exe +core /define:VS2019 /mksln core.sln
    '
    

- task: PythonScript@0
  displayName: Running a dirty hack to fix the fucked sln file from patched VPC
  inputs:
    scriptSource: 'inline'
    script: 'import sys

      def FindArgument( search ):
          if search in sys.argv:
              index = 0
              for arg in sys.argv:
                  if search == sys.argv[ index ]:
                      return sys.argv[ index + 1 ]
                  index += 1
          else:
              return False

      broken_sln_path = FindArgument( "-sln" )

      broken_sln = open( broken_sln_path, "r", encoding = "utf-8" )
      sln_lines = broken_sln.readlines()
      broken_sln.close()

      with open( broken_sln_path.rsplit( ".sln", 1 )[0] + "_fixed.sln", mode = "w", encoding = "utf-8" ) as fixed_sln:
          for line in sln_lines:
              if line.startswith( "Project(\"\")" ):
                  line = "Project(\"!\")" + line.split( "Project(\"\")", 1 )[1]
              fixed_sln.write( line )'
    arguments: '-sln "%cd%\src\core.sln"'


- task: DevEnvBuild@2
  displayName: Build the core projects
  inputs:
    solution: 'src\core_fixed.sln'
    buildCfg: 'Release'
    vsVersion: 'latest'
    clean: true

- task: CmdLine@2
  displayName: Build All Shaders
  inputs:
    workingDirectory: "$(Build.Repository.LocalPath)"
    script: '
      cd src/materialsystem/stdshaders/

      call _buildallshaders.bat
    '

- task: CmdLine@2
  displayName: Generate Engine Projects
  inputs:
    workingDirectory: "$(Build.Repository.LocalPath)"
    script: '
      cd src/
      
      devtools\bin\vpc_patched.exe /allgames +game /define:VS2019 /mksln engine.sln
    '

- task: PythonScript@0
  displayName: Running a dirty hack to fix the fucked sln file from patched VPC
  inputs:
    scriptSource: 'inline'
    script: 'import sys

      def FindArgument( search ):
          if search in sys.argv:
              index = 0
              for arg in sys.argv:
                  if search == sys.argv[ index ]:
                      return sys.argv[ index + 1 ]
                  index += 1
          else:
              return False

      broken_sln_path = FindArgument( "-sln" )

      broken_sln = open( broken_sln_path, "r", encoding = "utf-8" )
      sln_lines = broken_sln.readlines()
      broken_sln.close()

      with open( broken_sln_path.rsplit( ".sln", 1 )[0] + "_fixed.sln", mode = "w", encoding = "utf-8" ) as fixed_sln:
          for line in sln_lines:
              if line.startswith( "Project(\"\")" ):
                  line = "Project(\"!\")" + line.split( "Project(\"\")", 1 )[1]
              fixed_sln.write( line )'
    arguments: '-sln "%cd%\src\engine.sln"'

- task: DevEnvBuild@2
  displayName: Build the engine
  inputs:
    solution: 'src\engine_fixed.sln'
    buildCfg: 'Release'
    vsVersion: 'latest'
    clean: true


